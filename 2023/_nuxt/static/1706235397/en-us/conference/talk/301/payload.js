__NUXT_JSONP__("/en-us/conference/talk/301", (function(a){a.id=301;a.begin_time="2023-09-03T05:45:00Z";a.end_time="2023-09-03T06:15:00Z";a.is_remote=false;a.location="6-r2";a.youtube_id="";a.title="Streamlit meets WebAssembly - stlite";a.category="WEB";a.language="ENEN";a.python_level="INTERMEDIATE";a.recording_policy=true;a.abstract="[Streamlit](https:\u002F\u002Fstreamlit.io\u002F) is a popular framework for interactive web-based data apps in Python. However, there are some cases where users want to run their apps offline or without sending sensitive data to remote servers. To address these concerns, we introduce '[stlite](https:\u002F\u002Fgithub.com\u002Fwhitphx\u002Fstlite)': a WebAssembly port of Streamlit. It provides offline capability, data privacy, scalability, and multi-platform portability including desktop app packaging, while preserving Streamlit's original features, such as Python productivity and its rich ecosystem.\r\n\r\nIn this talk, we will discuss the benefits of stlite and demonstrate how to build and deploy stlite applications in a variety of ways, using ML\u002FCV examples.\r\nWe will also look at its internals from a technical point of view, which may inspire you with ideas on how to make use of Pyodide and how to transform Python frameworks for the Pyodide\u002FWasm runtime.\r\n\r\nYou can try out stlite online: https:\u002F\u002Fedit.share.stlite.net\u002F";a.detailed_description="Streamlit is a popular Python framework for rapidly building data-driven web applications. However, it requires a server-side Python runtime, which can limit its scalability and flexibility. In addition, users may want to run their applications offline or without sending sensitive data to remote servers. Stlite addresses these concerns by providing offline capability, data privacy, and multi-platform portability, including desktop app packaging, while preserving Streamlit's original features and ecosystem.\r\n\r\nStlite is a WebAssembly port of Streamlit that leverages Pyodide, a version of CPython compiled for WebAssembly. This enables client-side execution of Python code in web browsers without requiring a server-side Python runtime. Stlite inherits all the benefits of Streamlit, such as its high-level application framework and rich ecosystem of extensions. It also offers a variety of deployment options, including online editing and sharing, static web pages, and desktop application packaging.\r\n\r\nIn this talk, we will demonstrate how to build and deploy stlite applications using machine learning and data science examples, such as real-time image processing with webcam input. We will also discuss stlite's internals from a technical point of view, which may inspire new ideas on how to make use of the Pyodide\u002FWasm runtime for Python frameworks and applications.\r\n\r\nAttendees will leave with a good understanding of what stlite is, how it addresses the drawbacks of Streamlit, and how they can use it to build their own serverless Python applications with privacy and offline availability.";a.slide_link="https:\u002F\u002Fslides.com\u002Fwhitphx\u002Fstreamlit-meets-webassembly-stlite";a.slido_embed_link="https:\u002F\u002Fapp.sli.do\u002Fevent\u002F2vRG8isUcCjnKCWTCyMeqM";a.hackmd_embed_link="https:\u002F\u002Fhackmd.io\u002F@pycontw\u002FH1NKIiXp2";a.speakers=[{thumbnail_url:"https:\u002F\u002Ftw.pycon.org\u002Fprs\u002Fmedia\u002Fcache\u002Ff1\u002Fd5\u002Ff1d577cd524fba9788aa2fad18925304.jpg",name:"Yuichiro Tachibana",github_profile_url:"https:\u002F\u002Fgithub.com\u002Fwhitphx",twitter_profile_url:"https:\u002F\u002Ftwitter.com\u002Fwhitphx",facebook_profile_url:"https:\u002F\u002Fwww.facebook.com\u002Fytsuchiya2\u002F",bio:"Yuichiro works as a professional software developer and also loves contributing to OSS projects.\r\nAs a Pythonista, he has participated in various projects including web development, multimedia streaming, data management, computer vision, and machine learning."}];a.event_type="talk";return {data:[{speechData:a}],fetch:{},mutations:[["setSpeechData",a]]}}({})));