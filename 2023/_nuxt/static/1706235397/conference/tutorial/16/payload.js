__NUXT_JSONP__("/conference/tutorial/16", (function(a){return {data:[{speechData:{id:16,begin_time:"2023-09-03T05:05:00Z",end_time:"2023-09-03T06:35:00Z",is_remote:false,location:"1-r3",registration_link:a,youtube_id:a,title:"[Canceled] MicroPython for hardware hacking: interacting with sensors and actuators",category:"IOT",language:"ENEN",python_level:"INTERMEDIATE",recording_policy:true,abstract:"In this presentation, I will explore the world of hardware hacking using MicroPython. MicroPython is a lightweight version of Python that is designed to run on microcontrollers, making it an ideal choice for IoT applications and other embedded systems. I will demonstrate how to use MicroPython to interact with sensors (Temperature Sensor, UltraSonic, Humidity etc)  and actuators, including how to read data from sensors and control actuators such as motors and LEDs.\r\n\r\nI will start by introducing MicroPython and its advantages over other programming languages commonly used in embedded systems. I will then discuss how to set up a development environment for MicroPython and how to flash MicroPython onto a microcontroller.\r\n\r\nFinally, I will explore some real-world examples of how MicroPython can be used for hardware hacking, including building a weather station with MicroPython and interfacing with a Raspberry Pi using MicroPython.",detailed_description:"Workshop Details:\r\n\r\nI. Introduction to MicroPython\r\nWe will start with an introduction to MicroPython and its advantages over other programming languages commonly used in embedded systems. Participants will learn how MicroPython can be used in IoT applications and other embedded systems, and why it is an excellent choice for hardware hacking projects.\r\n\r\nII. Setting Up the Development Environment\r\nNext, we will guide participants through the process of setting up a development environment for MicroPython, including how to install MicroPython, choose a microcontroller board, and use a text editor or an Integrated Development Environment (IDE) for coding.\r\n\r\nIII. Basic MicroPython Concepts\r\nWe will cover the basic concepts of MicroPython, including variables, data types, expressions, conditional statements, loops, functions, and modules. Participants will learn how to use these concepts to write MicroPython code that interacts with sensors and actuators.\r\n\r\nIV. Interfacing with Sensors\r\nWe will demonstrate how to connect sensors to a microcontroller and read data from them using MicroPython. We will also cover how to interface with sensors using different communication protocols such as I2C, SPI, and UART.\r\n\r\nV. Interfacing with Actuators\r\nParticipants will learn how to connect actuators such as motors and LEDs to a microcontroller and control them using MicroPython. We will cover how to write MicroPython code that can drive motors and turn on and off LEDs.\r\n\r\nVI. Combining Sensors and Actuators\r\nWe will guide participants through building projects that combine sensors and actuators, demonstrating how to use MicroPython to control a motor based on data from a temperature sensor, for example. We will also provide examples of real-world projects that use MicroPython.\r\n\r\nVII. Interfacing MicroPython with other Devices\r\nParticipants will learn how to interface MicroPython with other devices such as the Raspberry Pi, Wi-Fi, and Bluetooth modules. We will demonstrate how to use MicroPython to send data wirelessly between devices.\r\n\r\nVIII. Troubleshooting and Debugging\r\nFinally, we will cover tips and techniques for debugging and troubleshooting MicroPython programs. We will guide participants through how to identify and fix common errors in MicroPython code.\r\n\r\nIX. Summary and Conclusion\r\nWe will recap the key concepts covered in the workshop and provide resources for further learning and development.",slide_link:"https:\u002F\u002Ffacebook.com",slido_embed_link:"https:\u002F\u002Fapp.sli.do\u002Fevent\u002Fvemr4WQUxZ2wrhyPAr3LHp",hackmd_embed_link:"https:\u002F\u002Fhackmd.io\u002F@pycontw\u002FrJjuLoma3",speakers:[{thumbnail_url:"https:\u002F\u002Ftw.pycon.org\u002Fprs\u002Fmedia\u002Fcache\u002F75\u002F39\u002F75398f66b95812b0a044792e290c7be6.jpg",name:"Olaniyan Adewale Hafeez",github_profile_url:"https:\u002F\u002Fgithub.com\u002Fabdulhafeez1432",twitter_profile_url:"https:\u002F\u002Ftwitter.com\u002Fcouonetech1440",facebook_profile_url:a,bio:"Olaniyan Adewale Hafeez is a trained civil engineer but chose IT as a career and built his reputation at home and abroad. He was a computer technician and network administrator at the beginning of his IT career until he switched to programming. He has over ten years of experience with Python & PHP. Adewale has developed various applications in Python for both private and government organizations. He has wide knowledge in HTML5, JavaScript, JQuery, PHP, Python, Magneto, MySQL, Twitter, Bootstraps, Scratch, Codeigniter, Python, Flask, Django Framework, Vuejs, Dart and Flutter. He is a Full-Stack Developer, Data Scientist, and Embedded Engineer."},{thumbnail_url:"https:\u002F\u002Ftw.pycon.org\u002Fprs\u002Fmedia\u002Fcache\u002Fdd\u002F62\u002Fdd62c8da03345bfd07201dabff2eb580.jpg",name:"Adigun Sulaiman Adisa",github_profile_url:a,twitter_profile_url:a,facebook_profile_url:a,bio:"Adigun Sulaiman Adisa is a dedicated and skilled Mechatronics Engineering Technologist with a strong passion for innovation and problem-solving. Currently employed at Techware Innovation Limited as a remote worker, he plays a crucial role in developing and implementing cutting-edge mechatronics solutions for various industries.\r\nIn addition to his professional work, Adigun pursued a degree in Mechanical Engineering at Ladoke Akintola University of Ogbomosho. This educational background complements his practical experience, allowing him to apply theoretical knowledge to real-world engineering challenges.\r\nAs a Mechatronics Engineering Technologist, Adigun possesses a comprehensive skill set that includes mechanical design, electrical systems, computer programming, and automation. He is proficient in utilizing software tools such as AutoCAD, SolidWorks, and MATLAB to design and simulate complex mechanical systems."}],event_type:"tutorial"}}],fetch:{},mutations:[]}}("")));