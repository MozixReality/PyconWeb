__NUXT_JSONP__("/conference/talk/274", {data:[{speechData:{id:274,begin_time:"2023-09-02T03:35:00Z",end_time:"2023-09-02T04:05:00Z",is_remote:false,location:"4-r0",youtube_id:"",title:"Comparison of Packaging Tools in 2023",category:"TOOL",language:"ENEN",python_level:"INTERMEDIATE",recording_policy:true,abstract:"Today, there are so many options for Python package management tools, such as pip (with venv), poetry, pipenv, pdm, pip-tools, and hatch.\r\n\r\nI'll compare those tools for people wondering which to use for package management tools in 2023.\r\n\r\nThis talk will be for people wondering which to use for package management tools, including library or framework developers, web developers, and automation script developers.",detailed_description:"## Background of this talk\r\n\r\nI wrote and posted an article in January 2023 (written in Japanese; the translated title is \"Why don't you use just pip with venv for Python package management?\")\r\nI received more likes and felt surprised and happy. There might also be a demand for a sequel-like article.\r\n\r\n\r\n## Target Audiences\r\n\r\nI will this talk for those wondering which package management tools to use.\r\n\r\nEspecially:\r\n\r\n- Library or framework developers\r\n- Web Developers\r\n- Automation Script developers\r\n\r\n## Motivation and Objectives\r\n\r\nWhich of the following is the best option? [poetry](https:\u002F\u002Fpython-poetry.org\u002F), [pipenv](https:\u002F\u002Fpipenv.pypa.io\u002Fen\u002Flatest\u002F), [pdm](https:\u002F\u002Fpdm.fming.dev\u002Flatest\u002F), [hatch](https:\u002F\u002Fhatch.pypa.io\u002Flatest\u002F) [pip-tools](https:\u002F\u002Fgithub.com\u002Fjazzband\u002Fpip-tools), or just venv and pip? What is the best Python package and dependency management tool today?\r\n\r\nThe environment around these tools is changing dramatically; the adoption of several PEPs, including PEP [621](https:\u002F\u002Fpeps.python.org\u002Fpep-0621\u002F), [517](https:\u002F\u002Fpeps.python.org\u002Fpep-0517\u002F), and [660](https:\u002F\u002Fpeps.python.org\u002Fpep-0660\u002F).\r\n\r\nI will compare pros \u002F cons and propose three use cases; based on several years of experience following Python package specifications.\r\n\r\n### Topics not covered\r\n\r\n* Each detail of the PEPs\r\n* Specifications and implementations of these tools\r\n\r\n## Planned Outline\r\n\r\n1. Introduction:\r\n    1. Background, Motivations\r\n    2. Target Audiences of this Talk\r\n    3. List of Packaging tools to compare in this Talk\r\n2. Pros \u002F Cons for each tools:\r\n    1. [pipenv](https:\u002F\u002Fpipenv.pypa.io\u002Fen\u002Flatest\u002F)\r\n    2. [poetry](https:\u002F\u002Fpython-poetry.org)\r\n    3. [pdm](https:\u002F\u002Fpdm.fming.dev\u002Flatest\u002F)\r\n    4. [pip-tools](https:\u002F\u002Fpip-tools.readthedocs.io\u002Fen\u002Flatest\u002F)\r\n    5. [hatch](https:\u002F\u002Fhatch.pypa.io\u002Flatest\u002F)\r\n    6. [pip](https:\u002F\u002Fpip.pypa.io\u002Fen\u002Fstable\u002Findex.html) (with venv)\r\n3. What is the best tool? (In some use cases)\r\n    1. Case 1: Library \u002F Framework Developing\r\n    2. Case 2: Web Application Developing\r\n    3. Case 3: Automation Script Developing\r\n4. Appendix: [rye](https:\u002F\u002Frye-up.com)",slide_link:"https:\u002F\u002Fslides.p3ac0ck.net\u002Fpycontw2023\u002Findex.html",slido_embed_link:"https:\u002F\u002Fapp.sli.do\u002Fevent\u002F9rb2547H5Lr5jJ955K8Thz",hackmd_embed_link:"https:\u002F\u002Fhackmd.io\u002F@pycontw\u002FrJ0MUjmph",speakers:[{thumbnail_url:"https:\u002F\u002Ftw.pycon.org\u002Fprs\u002Fmedia\u002Fcache\u002Fdd\u002F5b\u002Fdd5b356d0d529c0e29788dd2b11e6491.jpg",name:"Peacock (Yoichi Takai)",github_profile_url:"https:\u002F\u002Fgithub.com\u002Fpeacock0803sz",twitter_profile_url:"https:\u002F\u002Ftwitter.com\u002Fpeacock0803sz",facebook_profile_url:"https:\u002F\u002Fwww.facebook.com\u002Fpeacock0803sz",bio:"Born in August 2000.\r\nHe has been mainly promoting IaC with Terraform and building Web API with Go at TOPGATE, Inc. since December 2022.\r\nPreviously, he worked at CMScom Inc. since Sep. 2019, as a Web-backend engineer using Python.\r\n\r\nHe is also a volunteer staff of PyCon JP from 2020.\r\nSince 2022, involves as the Vice-Chair.\r\nAnd the one of Operating Member of the PyCon JP Association as a director of PyCon JP TV, monthly YouTube Live about Python and PyCons.\r\nHis hobbies are mirrorless camera, skiing, classical music, and drinking (mosts are beers and whiskies)."}],event_type:"talk"}}],fetch:{},mutations:[]});