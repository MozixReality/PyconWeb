__NUXT_JSONP__("/zh-hant/conference/talk/285", (function(a,b){a.id=285;a.begin_time="2023-09-02T08:00:00Z";a.end_time="2023-09-02T08:45:00Z";a.is_remote=false;a.location="6-r2";a.youtube_id=b;a.title="用 Pickle 寫程式是否搞錯了什麼？";a.category="CORE";a.language="ZHEN";a.python_level="EXPERIENCED";a.recording_policy=true;a.abstract="在本議程中，我們會深度剖析 Pickle 序列化格式，以告訴大家——「沒錯，你其實可以用 Pickle 格式寫程式」。同時，也藉此概念設計出一個能將 Python 原始碼轉換為 Pickle 格式的（無用）編譯器。最後也會簡單講述實務上使用 Pickle 應注意的資訊安全事項。";a.detailed_description="正如同官方文件所述，Python 中的 Pickle 是一個用於將 Python 物件（例如，列表、字典、類等）序列化和反序列化的模組與格式。但等等，你說寫程式？騙人的吧。序列化資料怎麼能用來寫程式？\r\n\r\n是的，pickle 格式其實可以是一種簡易的程式語言。\r\n\r\n話說回來，Pickle 縱然是在 Python 中存在已久的序列化格式，但又有多少人真正了解其背後的原理呢？本議程將從 pickle 指令碼的能力與行為，帶您深入剖析 pickle 原理；另一方面，也會藉此說明我們是如何藉此利（濫）用 pickle 的特性搭配各種 Python 技巧，製作出一個將 Python 原始碼編譯為 Pickle 位元組碼的編譯器 —— Pickora。最後，既然提到 pickle，也會不免俗地提到在實務上使用 pickle 時該注意的資訊安全議題。\r\n\r\n希望大家聽完本議程能對 pickle 能有更深入的理解（並獲得一些在現實中或許相當無用的奇技淫巧）。";a.slide_link=b;a.slido_embed_link="https:\u002F\u002Fapp.sli.do\u002Fevent\u002Fkop39z2q71itU9VASt8zEZ";a.hackmd_embed_link="https:\u002F\u002Fhackmd.io\u002F@pycontw\u002FrywHLoQph";a.speakers=[{thumbnail_url:"https:\u002F\u002Ftw.pycon.org\u002Fprs\u002Fmedia\u002Fcache\u002F73\u002F21\u002F7321817167b7ddd6677ecc4628756190.jpg",name:"splitline",github_profile_url:"https:\u002F\u002Fgithub.com\u002Fsplitline",twitter_profile_url:"https:\u002F\u002Ftwitter.com\u002F_splitline_",facebook_profile_url:"https:\u002F\u002Fwww.facebook.com\u002FCONTRIBUTING.md",bio:"我是 splitline，一位隨處可見的魔化異能行者。"}];a.event_type="talk";return {data:[{speechData:a}],fetch:{},mutations:[["setSpeechData",a]]}}({},"")));